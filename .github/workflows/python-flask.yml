name: Python Flask CI/CD Pipeline

on:
  push:
    branches:
      - main
      - lab3
  workflow_dispatch:

jobs:
  run_tests:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run:
          python -m unittest devops/lab3/tests/test_app.py
  publish:
    needs: run_tests
    runs-on: ubuntu-20.04
    steps:
      - name: Install Vault CLI
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor > hashicorp.gpg
          sudo install -o root -g root -m 644 hashicorp.gpg /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install vault
          
      - name: Login to Vault
        run: |
          export VAULT_ADDR=${{ secrets.VAULT_SERVER }}
          vault login -method=userpass username=${{ secrets.VAULT_LOGIN }} password=${{ secrets.VAULT_PWD }}
          
      - name: Fetch secrets from Vault
        run: |
          export VAULT_ADDR=${{ secrets.VAULT_SERVER }}
          DOCKER_LOGIN=$(vault kv get -field=DOCKER_LOGIN kv/lab3-secret)
          DOCKER_NAME=$(vault kv get -field=DOCKER_NAME kv/lab3-secret)
          DOCKER_PWD=$(vault kv get -field=DOCKER_PWD kv/lab3-secret)
          echo "DOCKER_LOGIN=$DOCKER_LOGIN" >> $GITHUB_ENV
          echo "DOCKER_NAME=$DOCKER_NAME" >> $GITHUB_ENV
          echo "DOCKER_PWD=$DOCKER_PWD" >> $GITHUB_ENV

      - name: Login
        run: echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
      - name: Debug GitHub ref
        run: echo ${GITHUB_REF}

      - uses: actions/checkout@main
      - name: Build
        run: docker build -t $DOCKER_LOGIN/$DOCKER_NAME:${GITHUB_REF:11} -f devops/lab3/web/Dockerfile .

      - name: Push
        run: docker push $DOCKER_LOGIN/$DOCKER_NAME:${GITHUB_REF:11}
  deploy:
    needs: [ publish ]
    runs-on: ubuntu-20.04
    steps:
      - name: Install Vault CLI
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor > hashicorp.gpg
          sudo install -o root -g root -m 644 hashicorp.gpg /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install vault

      - name: Login to Vault
        run: |
          export VAULT_ADDR=${{ secrets.VAULT_SERVER }}
          vault login -method=userpass username=${{ secrets.VAULT_LOGIN }} password=${{ secrets.VAULT_PWD }}

      - name: Fetch secrets from Vault
        run: |
          export VAULT_ADDR=${{ secrets.VAULT_SERVER }}
          DEPLOYMENT_SERVER=$(vault kv get -field=DEPLOYMENT_SERVER kv/lab3-secret)
          DEPLOYMENT_TOKEN=$(vault kv get -field=DEPLOYMENT_TOKEN kv/lab3-secret)
          DOCKER_LOGIN=$(vault kv get -field=DOCKER_LOGIN kv/lab3-secret)
          DOCKER_NAME=$(vault kv get -field=DOCKER_NAME kv/lab3-secret)
          DOCKER_PWD=$(vault kv get -field=DOCKER_PWD kv/lab3-secret)
          echo "DEPLOYMENT_SERVER=$DEPLOYMENT_SERVER" >> $GITHUB_ENV
          echo "DEPLOYMENT_TOKEN=DEPLOYMENT_TOKEN" >> $GITHUB_ENV
          echo "DOCKER_LOGIN=$DOCKER_LOGIN" >> $GITHUB_ENV
          echo "DOCKER_NAME=$DOCKER_NAME" >> $GITHUB_ENV
          echo "DOCKER_PWD=$DOCKER_PWD" >> $GITHUB_ENV
          echo "::add-mask::$DEPLOYMENT_SERVER"
          echo "::add-mask::$DEPLOYMENT_TOKEN"
          echo "::add-mask::$DOCKER_LOGIN"
          echo "::add-mask::$DOCKER_NAME"
          echo "::add-mask::$DOCKER_PWD"

      - name: Set Tag
        run: echo "TAG=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV

      - name: Send webhook for deploy
        run: "curl --silent --show-error --fail -X POST $DEPLOYMENT_SERVER -H 'Authorization: $DEPLOYMENT_TOKEN' -H 'Content-Type: application/json' -d '{\"owner\": $DOCKER_LOGIN, \"repository\": $DOCKER_NAME, \"tag\": \"${{ env.TAG }}\", \"ports\": {\"5000\": 5000}}'"
