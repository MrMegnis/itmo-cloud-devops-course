name: Python Flask CI/CD Pipeline

on:
  push:
    branches:
      - main
      - lab3
  workflow_dispatch:

jobs:
  run_tests:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run:
          python -m unittest devops/lab3/tests/test_app.py
  publish:
    needs: run_tests
    runs-on: ubuntu-20.04
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
    steps:
      - name: Login
        run: echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - name: Debug GitHub ref
        run: echo ${GITHUB_REF}

      - uses: actions/checkout@main
      - name: Build
        run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11} -f devops/lab3/web/Dockerfile .

      - name: Push
        run: docker push $LOGIN/$NAME:${GITHUB_REF:11}
  deploy:
    needs: [ publish ]
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Set Tag
        run: echo ::set-env name=TAG::$(echo ${GITHUB_REF:11})
      - name: Send webhook for deploy
  run: "curl --silent --show-error --fail -X POST ${{ secrets.DEPLOYMENT_SERVER }} -H 'Authorization: ${{ secrets.DEPLOYMENT_TOKEN }}' -H 'Content-Type: application/json' -d '{\"owner\": \"${{ secrets.DOCKER_LOGIN }}\", \"repository\": \"${{ secrets.DOCKER_NAME }}\", \"tag\": \"${{ env.TAG }}\", \"ports\": {\"8080\": 8080}}'"
